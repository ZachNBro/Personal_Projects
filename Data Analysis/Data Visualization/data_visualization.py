# -*- coding: utf-8 -*-
"""data_visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18IagDagjsOZ750lguRcVtbhdGWzCeJOq
"""



import pandas as pd
import matplotlib.pyplot as plt

# Load the Helsinki temperature data from the file helsinki-vantaa.txt
data = pd.read_csv('/content/sample_data/helsinki-vantaa.txt',
                   delim_whitespace=True)
# Set delim_whitespace to true to correctly interpret the spaces between the
# columns as delimiters and parse the data accordingly.

# Parse the dates from the column 'DATE' and set the dates as the index in the DataFrame
data['DATE'] = pd.to_datetime(data['DATE'])  # Convert 'DATE' column to datetime format
data.set_index('DATE', inplace=True)  # Set 'DATE' column as index

# Display the first few rows of the DataFrame to verify the data is loaded correctly
print(data.head())

print(len(data))

# Define the start and end dates for the 30-year period.
start_date = '1988-01-01'
end_date = '2018-12-31'

# Select the data for the 30-year period.
selection = data.loc[start_date:end_date]

# Calculate mean monthly temperatures for each month.
mean_monthly_temps = selection.groupby([selection.index.year, selection.index.month])['TEMP_C'].mean()

# Extract years and temperatures.
years = mean_monthly_temps.index.levels[0]
months = mean_monthly_temps.index.levels[1]
# Reshape the temperatures from a 2-dimensional array to a 1-dimensional array to plot properly.
temperatures = mean_monthly_temps.values.reshape((12, -1))

# Create a figure object.
plt.figure(figsize=(20, 10))

# Loop through the range of months within 1 year and assign to a variable. This ensures that each month is represented for each year.
months_flat = [m for m in range(1, 13)] * len(years)
temperatures_flat = temperatures.flatten()

# Plot the temperatures with the requested parameters.
plt.plot(range(len(months_flat)), temperatures_flat, marker='o', linestyle='-', color='black')

# Add title and axis labels.
plt.title('Helsinki-Vantaa Airport')
plt.xlabel('Time')
plt.ylabel('Mean Temperature (Celsius)')

# Set x-axis labels to years in increments of 4. We must add an additional 24
# months represented by "12*2" to accomodate the representation of the year 2020.
tick_positions = range(0, len(months_flat) + 12*2, 12*4)
years_labels = [f'{years[i]}' for i in range(0, len(years), 4)]
years_labels.append('2020')
plt.xticks(tick_positions, labels=years_labels, rotation=45, ha='right')

# Add gray grid background
plt.grid(color='gray', linestyle='-', linewidth=0.5)

# Adjust x-axis limits to flush the first and last years with the edge of the graph.
plt.xlim(0, len(months_flat) + 12)

# Display the plot.
plt.show()
