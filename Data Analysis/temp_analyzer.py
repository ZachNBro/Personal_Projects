# -*- coding: utf-8 -*-
"""temp_analyzer

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TtSv1PUh0s_6FobajA-vCMuKhiIVq9s2
"""

# -*- coding: utf-8 -*-
"""temp_analyzer

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TtSv1PUh0s_6FobajA-vCMuKhiIVq9s2
"""

"""
    File name: temp_analyzer.py
    Author: Zachary Brown
    Python Version 3.10.12
    Description: Take advantage of the functions we created in functions.py
    to convert the temperature data to celsius, classify each temperature,
    and display it to the user.
"""

# Python libraries are not required for this Exercise, but if you do load any libraries, do so before the dataset
# This file should contain all your Python code, including functions

# tempData list has 336 integers in the list.  In later assignments we will load an external
# datafile (e.g. .txt or .csv), but as this dataset is not very large, we'll place the data directly in the Python code
# List of half-hourly temperature values (in degrees Fahrenheit) for one week
tempData =  [19, 21, 21, 21, 23, 23, 23, 21, 19, 21, 19, 21, 23, 27, 27, 28, 30, 30, 32, 32, 32, 32, 34, 34,
             34, 36, 36, 36, 36, 36, 36, 34, 34, 34, 34, 34, 34, 32, 30, 30, 30, 28, 28, 27, 27, 27, 23, 23,
             21, 21, 21, 19, 19, 19, 18, 18, 21, 27, 28, 30, 32, 34, 36, 37, 37, 37, 39, 39, 39, 39, 39, 39,
             41, 41, 41, 41, 41, 39, 39, 37, 37, 36, 36, 34, 34, 32, 30, 30, 28, 27, 27, 25, 23, 23, 21, 21,
             19, 19, 19, 18, 18, 18, 21, 25, 27, 28, 34, 34, 41, 37, 37, 39, 39, 39, 39, 41, 41, 39, 39, 39,
             39, 39, 41, 39, 39, 39, 37, 36, 34, 32, 28, 28, 27, 25, 25, 25, 23, 23, 23, 23, 21, 21, 21, 21,
             19, 21, 19, 21, 21, 19, 21, 27, 28, 32, 36, 36, 37, 39, 39, 39, 39, 39, 41, 41, 41, 41, 41, 41,
             41, 41, 41, 39, 37, 36, 36, 34, 32, 30, 28, 28, 27, 27, 25, 25, 23, 23, 23, 21, 21, 21, 19, 19,
             19, 19, 19, 19, 21, 23, 23, 23, 25, 27, 30, 36, 37, 37, 39, 39, 41, 41, 41, 39, 39, 41, 43, 43,
             43, 43, 43, 43, 43, 43, 43, 39, 37, 37, 37, 36, 36, 36, 36, 34, 32, 32, 32, 32, 30, 30, 28, 28,
             28, 27, 27, 27, 27, 25, 27, 27, 27, 28, 28, 28, 30, 32, 32, 32, 34, 34, 36, 36, 36, 37, 37, 37,
             37, 37, 37, 37, 37, 37, 36, 34, 30, 30, 27, 27, 25, 25, 23, 21, 21, 21, 21, 19, 19, 19, 19, 19,
             18, 18, 18, 18, 18, 19, 23, 27, 30, 32, 32, 32, 32, 32, 32, 34, 34, 34, 34, 34, 36, 36, 36, 36,
             36, 32, 32, 32, 32, 32, 32, 32, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 28, 28]

# Begin your functions and code here, do not forget to document your code with comments

# Create a global list variable to store the imported temperature data. We
# must do this in order to pass the data to the functions we want to use.
tempClasses = []

# Pass the temperature variable in Fahrenheit to the function that converts
# it to celsius using the appropriate formula. Before classifying the data,
# we want to convert it.
def fahrToCelsius(tempFahrenheit):
  # Assign conversion equation with passed variable to a new variable.
  convertedTemp = round((tempFahrenheit - 32) / 1.8, 2)
  # Return the temperature in celsius.
  return convertedTemp

# Pass the temperature variable in Celsius to function that classifies the
# temperatures. These checks will return the applicable classification to be
# displayed later.
def tempClassifier(tempCelsius):
# Check if temperature is below -2 degrees (Celsius) and return associated
# numerical value.
  if tempCelsius < -2:
    return 0
# Check if temperature is between -2 to +2 degrees (Celsius) and return
# associated numerical value.
  elif  -2 <= tempCelsius <= 2:
    return 1
# Check if temperature is between +2 to +15 degrees (Celsius) and return
# associated numerical value.
  elif   2 < tempCelsius <= 15:
    return 2
# Check if temperature is above +15 degrees and return associated
# numerical value.
  elif  tempCelsius > 15:
    return 3

# Loop through the list of temperatures in Fahrenheit and pass to conversion
# function to convert each to celsius.
for tempFahrenheit in tempData:
  tempCelsius = fahrToCelsius(tempFahrenheit)
# Pass the converted temperatures in celsius to the classifier function
# to be classified properly.
  tempClass = tempClassifier(tempCelsius)
# Append the class values to the empty class list to prepare for display.
  tempClasses.append(tempClass)

# After assigning the classes to each temperature in celsius, count the number
# of temperatures in each class.
class_counts = {class_num: tempClasses.count(class_num) for class_num in range(4)}

# Loop through each class and count the number of temperatures in each and
# display the value.
for class_num in range(4):
    print(f"Number of temperatures in Class {class_num}: {class_counts.get(class_num, 0)}")